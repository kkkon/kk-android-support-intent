android {
    signingConfigs {
        debug {
            def checkSignFile = {
                def resultFile = null
                def needCheck = true
                def checkFile = null
                if ( null == resultFile || needCheck )
                {
                    checkFile = file('debug.keystore')
                    if ( checkFile.exists() ) { resultFile = checkFile }
                }
                if ( null == resultFile || needCheck )
                {
                    checkFile = file("${System.properties['user.home']}/debug.keystore")
                    if ( checkFile.exists() ) { resultFile = checkFile }
                }
                if ( null == resultFile || needCheck )
                {
                    checkFile = file("${System.properties['user.home']}/.andoird/debug.keystore")
                    if ( checkFile.exists() ) { resultFile = checkFile }
                }
                if ( null == resultFile || needCheck )
                {
                    checkFile = file("${System.getenv('ANDROID_SDK_HOME')}/.android/debug.keystore")
                    if ( checkFile.exists() ) { resultFile = checkFile }
                }
                if ( null == resultFile || needCheck )
                {
                    checkFile = file("${System.getenv('ANDROID_EMULATOR_HOME')}/debug.keystore")
                    if ( checkFile.exists() ) { resultFile = checkFile }
                }
                //println "storeFile=" + ((null==resultFile)?(""):(resultFile.path))
                return { resultFile };
            }()
            def signFile = checkSignFile()

            storeFile signFile
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
            //v1SigningEnabled true
            //v2SigningEnabled false
        }
        release {
            def signPropFile = file("${System.properties['user.home']}/release.properties")
            def signingProps = new Properties()
            signingProps.load(new FileInputStream(signPropFile))

            storeFile file("${System.properties['user.home']}/release.keystore")
            storePassword signingProps['storePassword']
            keyAlias signingProps['keyAlias']
            keyPassword signingProps['keyPassword']
            //v1SigningEnabled true
            //v2SigningEnabled true
        }
    }
}
